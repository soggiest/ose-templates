apiVersion: v1
kind: Template
labels:
  template: amgen-jws-tomcat7-master-ad
metadata:
  annotations:
    description: Application template for JWS applications built using STI.
    iconClass: icon-tomcat
  creationTimestamp: null
  name: amgen-jws-tomcat7-master-ad
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-${OPERATING_ENVIRONMENT}
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-${OPERATING_ENVIRONMENT}
  spec:
    host: ${APPLICATION_HOSTNAME}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${GIT_CONTEXT_DIR}
      git:
        ref: master
        uri: ${GIT_URI}
      sourceSecret:
        name: amgen-git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: tomcat7-openshift-ad:${JWS_RELEASE}
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_TRIGGER_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_TRIGGER_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JWS_ADMIN_USERNAME
            value: ${JWS_ADMIN_USERNAME}
          - name: JWS_ADMIN_PASSWORD
            value: ${JWS_ADMIN_PASSWORD}
          - name: APPDYNAMICS_ACCOUNT_ACCESS_KEY
            value: ${APPDYNAMICS_ACCOUNT_ACCESS_KEY}
          - name: APPDYNAMICS_ACCOUNT_NAME
            value: ${APPDYNAMICS_ACCOUNT_NAME}
          - name: APPDYNAMICS_CONTROLLER_HOST
            value: ${APPDYNAMICS_CONTROLLER_HOST}
          - name: APPDYNAMICS_CONTROLLER_PORT
            value: ${APPDYNAMICS_CONTROLLER_PORT}
          - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
            value: ${APPDYNAMICS_CONTROLLER_SSL_ENABLED}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${GIT_CONTEXT_DIR}
      git:
        ref: master
        uri: ${GIT_URI}
      sourceSecret:
        name: amgen-git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: tomcat7-openshift-ad:${JWS_RELEASE}
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_TRIGGER_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_TRIGGER_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JWS_ADMIN_USERNAME
            value: ${JWS_ADMIN_USERNAME}
          - name: JWS_ADMIN_PASSWORD
            value: ${JWS_ADMIN_PASSWORD}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} 'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                |grep -iq 'stateName *= *STARTED'
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStream
          name: ${APPLICATION_NAME}
      type: ImageChange
parameters:
- description: JWS Release version, e.g. 3.0, 2.1, etc.
  name: JWS_RELEASE
  value: "3.0"
- description: The name for the application.
  name: APPLICATION_NAME
  value: jws-app
- description: AppDynamic Account Name
name: APPDYNAMICS_ACCOUNT_NAME
  value: appdynamics
- description: AppDynamic Account Key
  name: APPDYNAMICS_ACCOUNT_ACCESS_KEY
  value: SJ5b2m7d1$354
- description: AppDynamic Controller Host
  name: APPDYNAMICS_CONTROLLER_HOST
  value: uslv-papp-dyn03
- description: AppDynamic Controller Port
  name: APPDYNAMICS_CONTROLLER_PORT
  value: 8090
- description: AppDynamics Controller SSL Enabled
  name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
  value: false
- description: 'Custom hostname for service routes.  Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  name: APPLICATION_HOSTNAME
- description: Git source URI for application
  name: GIT_URI
- description: Path within Git project to build; empty for root project directory.
  name: GIT_CONTEXT_DIR
- description: 'Operating Environment for the app. Options: dev, test, prod, sandbox'
  name: OPERATING_ENVIRONMENT
- description: JWS Admin User
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JWS_ADMIN_USERNAME
- description: JWS Admin Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JWS_ADMIN_PASSWORD
- description: Github trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_TRIGGER_SECRET
- description: Generic build trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_TRIGGER_SECRET
